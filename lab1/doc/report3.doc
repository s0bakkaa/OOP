{\rtf1\ansi\ansicpg1252\deff0\uc1
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Liberation Serif;}
{\f1\fnil\fcharset0\fprq0\fttruetype Liberation Sans;}
{\f2\fnil\fcharset0\fprq0\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red255\green255\blue255;}
{\stylesheet
{\s6\fi-431\li720\sbasedon28\snext28 Contents 1;}
{\s7\fi-431\li1440\sbasedon28\snext28 Contents 2;}
{\s1\fi-431\li720 Arrowhead List;}
{\s27\fi-431\li720\sbasedon28 Lower Roman List;}
{\s29\tx431\sbasedon20\snext28 Numbered Heading 1;}
{\s30\tx431\sbasedon21\snext28 Numbered Heading 2;}
{\s12\fi-431\li720 Diamond List;}
{\s9\fi-431\li2880\sbasedon28\snext28 Contents 4;}
{\s8\fi-431\li2160\sbasedon28\snext28 Contents 3;}
{\s31\tx431\sbasedon22\snext28 Numbered Heading 3;}
{\s32\fi-431\li720 Numbered List;}
{\s15\sbasedon28 Endnote Text;}
{\*\cs14\fs20\super Endnote Reference;}
{\s4\fi-431\li720 Bullet List;}
{\s5\tx1584\sbasedon29\snext28 Chapter Heading;}
{\s35\fi-431\li720 Square List;}
{\s11\fi-431\li720 Dashed List;}
{\s22\sb440\sa60\f1\fs24\b\sbasedon28\snext28 Heading 3;}
{\s37\fi-431\li720 Tick List;}
{\s24\fi-431\li720 Heart List;}
{\s40\fi-431\li720\sbasedon32 Upper Roman List;}
{\s39\fi-431\li720\sbasedon32 Upper Case List;}
{\s16\fi-288\li288\fs20\sbasedon28 Footnote;}
{\s19\fi-431\li720 Hand List;}
{\s18\fs20\sbasedon28 Footnote Text;}
{\s20\sb440\sa60\f1\fs34\b\sbasedon28\snext28 Heading 1;}
{\s21\sb440\sa60\f1\fs28\b\sbasedon28\snext28 Heading 2;}
{\s10\qc\sb240\sa120\f1\fs32\b\sbasedon28\snext28 Contents Header;}
{\s23\sb440\sa60\f1\fs24\b\sbasedon28\snext28 Heading 4;}
{\s28\f0\fs24 Normal;}
{\s26\fi-431\li720\sbasedon32 Lower Case List;}
{\s2\li1440\ri1440\sa120\sbasedon28 Block Text;}
{\s33\f2\sbasedon28 Plain Text;}
{\s34\tx1584\sbasedon29\snext28 Section Heading;}
{\s25\fi-431\li720 Implies List;}
{\s3\fi-431\li720 Box List;}
{\s36\fi-431\li720 Star List;}
{\*\cs17\fs20\super Footnote Reference;}
{\s38\fi-431\li720 Triangle List;}
{\s13\fi-288\li288\sbasedon28 Endnote;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\revprop3{\*\rdf}{\info\uc1}\deftab720\viewkind1\paperw11905\paperh16837\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx360\headery0\footery0\pgncont\ltrsect
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1052 \uc0\u1048 \uc0\u1053 \uc0\u1048 \uc0\u1057 \uc0\u1058 \uc0\u1045 \uc0\u1056 \uc0\u1057 \uc0\u1058 \uc0\u1042 \uc0\u1054  \uc0\u1054 \uc0\u1041 \uc0\u1056 \uc0\u1040 \uc0\u1047 \uc0\u1054 \uc0\u1042 \uc0\u1040 \uc0\u1053 \uc0\u1048 \uc0\u1071  \uc0\u1048  \uc0\u1053 \uc0\u1040 \uc0\u1059 \uc0\u1050 \uc0\u1048  \uc0\u1056 \uc0\u1054 \uc0\u1057 \uc0\u1057 \uc0\u1048 \uc0\u1049 \uc0\u1057 \uc0\u1050 \uc0\u1054 \uc0\u1049  \uc0\u1060 \uc0\u1045 \uc0\u1044 \uc0\u1045 \uc0\u1056 \uc0\u1040 \uc0\u1062 \uc0\u1048 \uc0\u1048 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1052 \uc0\u1054 \uc0\u1057 \uc0\u1050 \uc0\u1054 \uc0\u1042 \uc0\u1057 \uc0\u1050 \uc0\u1048 \uc0\u1049  \uc0\u1040 \uc0\u1042 \uc0\u1048 \uc0\u1040 \uc0\u1062 \uc0\u1048 \uc0\u1054 \uc0\u1053 \uc0\u1053 \uc0\u1067 \uc0\u1049  \uc0\u1048 \uc0\u1053 \uc0\u1057 \uc0\u1058 \uc0\u1048 \uc0\u1058 \uc0\u1059 \uc0\u1058 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch (\uc0\u1053 \uc0\u1040 \uc0\u1062 \uc0\u1048 \uc0\u1054 \uc0\u1053 \uc0\u1040 \uc0\u1051 \uc0\u1068 \uc0\u1053 \uc0\u1067 \uc0\u1049  \uc0\u1048 \uc0\u1057 \uc0\u1057 \uc0\u1051 \uc0\u1045 \uc0\u1044 \uc0\u1054 \uc0\u1042 \uc0\u1040 \uc0\u1058 \uc0\u1045 \uc0\u1051 \uc0\u1068 \uc0\u1057 \uc0\u1050 \uc0\u1048 \uc0\u1049  \uc0\u1059 \uc0\u1053 \uc0\u1048 \uc0\u1042 \uc0\u1045 \uc0\u1056 \uc0\u1057 \uc0\u1048 \uc0\u1058 \uc0\u1045 \uc0\u1058 )}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1051 \uc0\u1040 \uc0\u1041 \uc0\u1054 \uc0\u1056 \uc0\u1040 \uc0\u1058 \uc0\u1054 \uc0\u1056 \uc0\u1053 \uc0\u1040 \uc0\u1071  \uc0\u1056 \uc0\u1040 \uc0\u1041 \uc0\u1054 \uc0\u1058 \uc0\u1040  \uc0\u8470 3}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1087 \uc0\u1086  \uc0\u1082 \uc0\u1091 \uc0\u1088 \uc0\u1089 \uc0\u1091  \uc1\u8220\'93\uc0\u1054 \uc0\u1073 \uc0\u1098 \uc0\u1077 \uc0\u1082 \uc0\u1090 \uc0\u1085 \uc0\u1086 -\uc0\u1086 \uc0\u1088 \uc0\u1080 \uc0\u1077 \uc0\u1085 \uc0\u1090 \uc0\u1080 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1085 \uc0\u1085 \uc0\u1086 \uc0\u1077  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1080 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077 \uc1\u8221\'94}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch III \uc0\u1089 \uc0\u1077 \uc0\u1084 \uc0\u1077 \uc0\u1089 \uc0\u1090 \uc0\u1088 , 2021/22 \uc0\u1091 \uc0\u1095 \uc0\u1077 \uc0\u1073 \uc0\u1085 \uc0\u1099 \uc0\u1081  \uc0\u1075 \uc0\u1086 \uc0\u1076 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qr\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1042 \uc0\u1099 \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1085 \uc0\u1080 \uc0\u1083 \uc0\u1072  \uc0\u1089 \uc0\u1090 \uc0\u1091 \uc0\u1076 \uc0\u1077 \uc0\u1085 \uc0\u1090 \uc0\u1082 \uc0\u1072  \uc0\u1075 \uc0\u1088 \uc0\u1091 \uc0\u1087 \uc0\u1087 \uc0\u1099  }{\s28\f0\fs28\i\ul\lang1033{\*\listtag0}\uc0\u1052 8\uc0\u1054 -208\uc0\u1041 -20}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qr\s28\itap0{\s28\f0\fs28\i\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1064 \uc0\u1072 \uc0\u1090 \uc0\u1091 \uc0\u1085 \uc0\u1086 \uc0\u1074 \uc0\u1072  \uc0\u1070 \uc0\u1083 \uc0\u1080 \uc0\u1103  \uc0\u1042 \uc0\u1080 \uc0\u1082 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1085 \uc0\u1072 }{\s28\f0\fs28\i\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qr\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1055 \uc0\u1088 \uc0\u1077 \uc0\u1087 \uc0\u1086 \uc0\u1076 \uc0\u1072 \uc0\u1074 \uc0\u1072 \uc0\u1090 \uc0\u1077 \uc0\u1083 \uc0\u1100 : }{\s28\f0\fs28\i\ul\lang1033{\*\listtag0}\uc0\u1044 \uc0\u1086 \uc0\u1088 \uc0\u1086 \uc0\u1093 \uc0\u1086 \uc0\u1074  \uc0\u1045 \uc0\u1074 \uc0\u1075 \uc0\u1077 \uc0\u1085 \uc0\u1080 \uc0\u1081  \uc0\u1055 \uc0\u1072 \uc0\u1074 \uc0\u1083 \uc0\u1086 \uc0\u1074 \uc0\u1080 \uc0\u1095 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1052 \uc0\u1086 \uc0\u1089 \uc0\u1082 \uc0\u1074 \uc0\u1072 , 2021}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1055 \uc0\u1086 \uc0\u1089 \uc0\u1090 \uc0\u1072 \uc0\u1085 \uc0\u1086 \uc0\u1074 \uc0\u1082 \uc0\u1072  \uc0\u1079 \uc0\u1072 \uc0\u1076 \uc0\u1072 \uc0\u1095 \uc0\u1080 }{\s28\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1042 \uc0\u1072 \uc0\u1088 \uc0\u1080 \uc0\u1072 \uc0\u1085 \uc0\u1090  26: \uc0\u1082 \uc0\u1074 \uc0\u1072 \uc0\u1076 \uc0\u1088 \uc0\u1072 \uc0\u1090 , \uc0\u1087 \uc0\u1088 \uc0\u1103 \uc0\u1084 \uc0\u1086 \uc0\u1091 \uc0\u1075 \uc0\u1086 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1080 \uc0\u1082 , \uc0\u1090 \uc0\u1088 \uc0\u1072 \uc0\u1087 \uc0\u1077 \uc0\u1094 \uc0\u1080 \uc0\u1103 . \uc0\u1053 \uc0\u1077 \uc0\u1086 \uc0\u1073 \uc0\u1093 \uc0\u1086 \uc0\u1076 \uc0\u1080 \uc0\u1084 \uc0\u1086  \uc0\u1089 \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1077 \uc0\u1082 \uc0\u1090 \uc0\u1080 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1090 \uc0\u1100  \uc0\u1080  \uc0\u1079 \uc0\u1072 \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1080 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1090 \uc0\u1100  \uc0\u1085 \uc0\u1072  \uc0\u1103 \uc0\u1079 \uc0\u1099 \uc0\u1082 \uc0\u1077  C++ \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1099  \uc0\u1090 \uc0\u1088 \uc0\u1077 \uc0\u1093  \uc0\u1092 \uc0\u1080 \uc0\u1075 \uc0\u1091 \uc0\u1088  \uc0\u1089 \uc0\u1086 \uc0\u1075 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1085 \uc0\u1086  \uc0\u1074 \uc0\u1072 \uc0\u1088 \uc0\u1080 \uc0\u1072 \uc0\u1085 \uc0\u1090 \uc0\u1091  \uc0\u1079 \uc0\u1072 \uc0\u1076 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1103 . \uc0\u1050 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1099  \uc0\u1076 \uc0\u1086 \uc0\u1083 \uc0\u1078 \uc0\u1085 \uc0\u1099  \uc0\u1091 \uc0\u1076 \uc0\u1086 \uc0\u1074 \uc0\u1083 \uc0\u1077 \uc0\u1090 \uc0\u1074 \uc0\u1086 \uc0\u1088 \uc0\u1103 \uc0\u1090 \uc0\u1100  \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1080 \uc0\u1084  \uc0\u1087 \uc0\u1088 \uc0\u1072 \uc0\u1074 \uc0\u1080 \uc0\u1083 \uc0\u1072 \uc0\u1084 :}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. \uc0\u1076 \uc0\u1086 \uc0\u1083 \uc0\u1078 \uc0\u1085 \uc0\u1099  \uc0\u1073 \uc0\u1099 \uc0\u1090 \uc0\u1100  \uc0\u1085 \uc0\u1072 \uc0\u1079 \uc0\u1074 \uc0\u1072 \uc0\u1085 \uc0\u1099  \uc0\u1090 \uc0\u1072 \uc0\u1082  \uc0\u1078 \uc0\u1077 , \uc0\u1082 \uc0\u1072 \uc0\u1082  \uc0\u1074  \uc0\u1074 \uc0\u1072 \uc0\u1088 \uc0\u1080 \uc0\u1072 \uc0\u1085 \uc0\u1090 \uc0\u1072 \uc0\u1093  \uc0\u1079 \uc0\u1072 \uc0\u1076 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1103 , \uc0\u1080  \uc0\u1088 \uc0\u1072 \uc0\u1089 \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1086 \uc0\u1078 \uc0\u1077 \uc0\u1085 \uc0\u1099  \uc0\u1074  \uc0\u1088 \uc0\u1072 \uc0\u1079 \uc0\u1076 \uc0\u1077 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1099 \uc0\u1093  \uc0\u1092 \uc0\u1072 \uc0\u1081 \uc0\u1083 \uc0\u1072 \uc0\u1093 : \uc0\u1086 \uc0\u1090 \uc0\u1076 \uc0\u1077 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1086  \uc0\u1079 \uc0\u1072 \uc0\u1075 \uc0\u1086 \uc0\u1083 \uc0\u1086 \uc0\u1074 \uc0\u1082 \uc0\u1080  (\uc0\u1080 \uc0\u1084 \uc0\u1103 _\uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072 _\uc0\u1089 _\uc0\u1084 \uc0\u1072 \uc0\u1083 \uc0\u1077 \uc0\u1085 \uc0\u1100 \uc0\u1082 \uc0\u1086 \uc0\u1081 _\uc0\u1073 \uc0\u1091 \uc0\u1082 \uc0\u1074 \uc0\u1099 .h), \uc0\u1086 \uc0\u1090 \uc0\u1076 \uc0\u1077 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1086  \uc0\u1086 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1076 \uc0\u1086 \uc0\u1074  (\uc0\u1080 \uc0\u1084 \uc0\u1103 _\uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072 _\uc0\u1089 _\uc0\u1084 \uc0\u1072 \uc0\u1083 \uc0\u1077 \uc0\u1085 \uc0\u1100 \uc0\u1082 \uc0\u1086 \uc0\u1081 _\uc0\u1073 \uc0\u1091 \uc0\u1082 \uc0\u1074 \uc0\u1099 .cpp);}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. \uc0\u1080 \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1100  \uc0\u1086 \uc0\u1073 \uc0\u1097 \uc0\u1080 \uc0\u1081  \uc0\u1088 \uc0\u1086 \uc0\u1076 \uc0\u1080 \uc0\u1090 \uc0\u1077 \uc0\u1083 \uc0\u1100 \uc0\u1089 \uc0\u1082 \uc0\u1080 \uc0\u1081  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089  Figure;}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. \uc0\u1089 \uc0\u1086 \uc0\u1076 \uc0\u1077 \uc0\u1088 \uc0\u1078 \uc0\u1072 \uc0\u1090 \uc0\u1100  \uc0\u1082 \uc0\u1086 \uc0\u1085 \uc0\u1089 \uc0\u1090 \uc0\u1088 \uc0\u1091 \uc0\u1082 \uc0\u1090 \uc0\u1086 \uc0\u1088 , \uc0\u1087 \uc0\u1088 \uc0\u1080 \uc0\u1085 \uc0\u1080 \uc0\u1084 \uc0\u1072 \uc0\u1102 \uc0\u1097 \uc0\u1080 \uc0\u1081  \uc0\u1082 \uc0\u1086 \uc0\u1086 \uc0\u1088 \uc0\u1076 \uc0\u1080 \uc0\u1085 \uc0\u1072 \uc0\u1090 \uc0\u1099  \uc0\u1074 \uc0\u1077 \uc0\u1088 \uc0\u1096 \uc0\u1080 \uc0\u1085  \uc0\u1092 \uc0\u1080 \uc0\u1075 \uc0\u1091 \uc0\u1088 \uc0\u1099  \uc0\u1080 \uc0\u1079  \uc0\u1089 \uc0\u1090 \uc0\u1072 \uc0\u1085 \uc0\u1076 \uc0\u1072 \uc0\u1088 \uc0\u1090 \uc0\u1085 \uc0\u1086 \uc0\u1075 \uc0\u1086  \uc0\u1087 \uc0\u1086 \uc0\u1090 \uc0\u1086 \uc0\u1082 \uc0\u1072  std::cin, \uc0\u1088 \uc0\u1072 \uc0\u1089 \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1086 \uc0\u1078 \uc0\u1077 \uc0\u1085 \uc0\u1085 \uc0\u1099 \uc0\u1077  \uc0\u1095 \uc0\u1077 \uc0\u1088 \uc0\u1077 \uc0\u1079  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1073 \uc0\u1077 \uc0\u1083  (\uc0\u1087 \uc0\u1088 \uc0\u1080 \uc0\u1084 \uc0\u1077 \uc0\u1088 : \uc1\u8220\'930.0 0.0 1.0 0.0 1.0 1.0 0.0 1.0\uc1\u8221\'94;}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. \uc0\u1089 \uc0\u1086 \uc0\u1076 \uc0\u1077 \uc0\u1088 \uc0\u1078 \uc0\u1072 \uc0\u1090 \uc0\u1100  \uc0\u1085 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1088  \uc0\u1086 \uc0\u1073 \uc0\u1097 \uc0\u1080 \uc0\u1093  \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1076 \uc0\u1086 \uc0\u1074 :}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 4.1. size_t VertexesNumber() - \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1076 , \uc0\u1074 \uc0\u1086 \uc0\u1079 \uc0\u1074 \uc0\u1088 \uc0\u1072 \uc0\u1097 \uc0\u1072 \uc0\u1102 \uc0\u1097 \uc0\u1080 \uc0\u1081  \uc0\u1082 \uc0\u1086 \uc0\u1083 \uc0\u1080 \uc0\u1095 \uc0\u1077 \uc0\u1089 \uc0\u1090 \uc0\u1074 \uc0\u1086  \uc0\u1074 \uc0\u1077 \uc0\u1088 \uc0\u1096 \uc0\u1080 \uc0\u1085  \uc0\u1092 \uc0\u1080 \uc0\u1075 \uc0\u1091 \uc0\u1088 \uc0\u1099 ;}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 4.2. double Area() - \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1076  \uc0\u1088 \uc0\u1072 \uc0\u1089 \uc0\u1095 \uc0\u1077 \uc0\u1090 \uc0\u1072  \uc0\u1087 \uc0\u1083 \uc0\u1086 \uc0\u1097 \uc0\u1072 \uc0\u1076 \uc0\u1080  \uc0\u1092 \uc0\u1080 \uc0\u1075 \uc0\u1091 \uc0\u1088 \uc0\u1099 ;}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 4.3. void Print(std::ostream& os) - \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1076  \uc0\u1087 \uc0\u1077 \uc0\u1095 \uc0\u1072 \uc0\u1090 \uc0\u1080  \uc0\u1090 \uc0\u1080 \uc0\u1087 \uc0\u1072  \uc0\u1092 \uc0\u1080 \uc0\u1075 \uc0\u1091 \uc0\u1088 \uc0\u1099  \uc0\u1080  \uc0\u1077 \uc0\u1077  \uc0\u1082 \uc0\u1086 \uc0\u1086 \uc0\u1088 \uc0\u1076 \uc0\u1080 \uc0\u1085 \uc0\u1072 \uc0\u1090  \uc0\u1074 \uc0\u1077 \uc0\u1088 \uc0\u1096 \uc0\u1080 \uc0\u1085  \uc0\u1074  \uc0\u1087 \uc0\u1086 \uc0\u1090 \uc0\u1086 \uc0\u1082  \uc0\u1074 \uc0\u1099 \uc0\u1074 \uc0\u1086 \uc0\u1076 \uc0\u1072  os \uc0\u1074  \uc0\u1092 \uc0\u1086 \uc0\u1088 \uc0\u1084 \uc0\u1072 \uc0\u1090 \uc0\u1077 : \uc1\u8220\'93Square: (0.0, 0.0) (1.0, 0.0) (1.0, 1.0) (0.0, 1.0)\uc1\u8221\'94 \uc0\u1089  \uc0\u1087 \uc0\u1077 \uc0\u1088 \uc0\u1077 \uc0\u1074 \uc0\u1086 \uc0\u1076 \uc0\u1086 \uc0\u1084  \uc0\u1089 \uc0\u1090 \uc0\u1088 \uc0\u1086 \uc0\u1082 \uc0\u1080  \uc0\u1074  \uc0\u1082 \uc0\u1086 \uc0\u1085 \uc0\u1094 \uc0\u1077 .}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1054 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1099 }{\s28\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1048 \uc0\u1089 \uc0\u1093 \uc0\u1086 \uc0\u1076 \uc0\u1085 \uc0\u1099 \uc0\u1081  \uc0\u1082 \uc0\u1086 \uc0\u1076  \uc0\u1083 \uc0\u1077 \uc0\u1078 \uc0\u1080 \uc0\u1090  \uc0\u1074  10 \uc0\u1092 \uc0\u1072 \uc0\u1081 \uc0\u1083 \uc0\u1072 \uc0\u1093 :}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. figure.h: \uc0\u1086 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1072 \uc0\u1073 \uc0\u1089 \uc0\u1090 \uc0\u1088 \uc0\u1072 \uc0\u1082 \uc0\u1090 \uc0\u1085 \uc0\u1086 \uc0\u1075 \uc0\u1086  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1092 \uc0\u1080 \uc0\u1075 \uc0\u1091 \uc0\u1088 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. point.h: \uc0\u1086 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1090 \uc0\u1086 \uc0\u1095 \uc0\u1082 \uc0\u1080 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. square.h: \uc0\u1086 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1082 \uc0\u1074 \uc0\u1072 \uc0\u1076 \uc0\u1088 \uc0\u1072 \uc0\u1090 \uc0\u1072 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1077 \uc0\u1075 \uc0\u1086 \uc0\u1089 \uc0\u1103  \uc0\u1086 \uc0\u1090  Figure}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. rectangle.h: \uc0\u1086 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1087 \uc0\u1088 \uc0\u1103 \uc0\u1084 \uc0\u1086 \uc0\u1091 \uc0\u1075 \uc0\u1086 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1080 \uc0\u1082 \uc0\u1072 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1077 \uc0\u1075 \uc0\u1086 \uc0\u1089 \uc0\u1103  \uc0\u1086 \uc0\u1090  Figure}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. trapezoid.h: \uc0\u1086 \uc0\u1087 \uc0\u1080 \uc0\u1089 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1090 \uc0\u1088 \uc0\u1072 \uc0\u1087 \uc0\u1077 \uc0\u1094 \uc0\u1080 \uc0\u1080 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1077 \uc0\u1075 \uc0\u1086 \uc0\u1089 \uc0\u1103  \uc0\u1086 \uc0\u1090  Figure}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. point.cpp: \uc0\u1088 \uc0\u1077 \uc0\u1072 \uc0\u1083 \uc0\u1080 \uc0\u1079 \uc0\u1072 \uc0\u1094 \uc0\u1080 \uc0\u1103  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1090 \uc0\u1086 \uc0\u1095 \uc0\u1082 \uc0\u1080 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 7. square.cpp: \uc0\u1088 \uc0\u1077 \uc0\u1072 \uc0\u1083 \uc0\u1080 \uc0\u1079 \uc0\u1072 \uc0\u1094 \uc0\u1080 \uc0\u1103  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1082 \uc0\u1074 \uc0\u1072 \uc0\u1076 \uc0\u1088 \uc0\u1072 \uc0\u1090 \uc0\u1072 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1077 \uc0\u1075 \uc0\u1086 \uc0\u1089 \uc0\u1103  \uc0\u1086 \uc0\u1090  Figure}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 8. rectangle.cpp: \uc0\u1088 \uc0\u1077 \uc0\u1072 \uc0\u1083 \uc0\u1080 \uc0\u1079 \uc0\u1072 \uc0\u1094 \uc0\u1080 \uc0\u1103  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1087 \uc0\u1088 \uc0\u1103 \uc0\u1084 \uc0\u1086 \uc0\u1091 \uc0\u1075 \uc0\u1086 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1080 \uc0\u1082 \uc0\u1072 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1077 \uc0\u1075 \uc0\u1086 \uc0\u1089 \uc0\u1103  \uc0\u1086 \uc0\u1090  Figure}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 9. trapezoid.cpp: \uc0\u1088 \uc0\u1077 \uc0\u1072 \uc0\u1083 \uc0\u1080 \uc0\u1079 \uc0\u1072 \uc0\u1094 \uc0\u1080 \uc0\u1103  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1072  \uc0\u1090 \uc0\u1088 \uc0\u1072 \uc0\u1087 \uc0\u1077 \uc0\u1094 \uc0\u1080 \uc0\u1080 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1091 \uc0\u1102 \uc0\u1097 \uc0\u1077 \uc0\u1075 \uc0\u1086 \uc0\u1089 \uc0\u1103  \uc0\u1086 \uc0\u1090  Figure}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch 10. main.cpp: \uc0\u1086 \uc0\u1089 \uc0\u1085 \uc0\u1086 \uc0\u1074 \uc0\u1085 \uc0\u1072 \uc0\u1103  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1072 }{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1044 \uc0\u1085 \uc0\u1077 \uc0\u1074 \uc0\u1085 \uc0\u1080 \uc0\u1082  \uc0\u1086 \uc0\u1090 \uc0\u1083 \uc0\u1072 \uc0\u1076 \uc0\u1082 \uc0\u1080 }{\s28\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1042 \uc0\u1086  \uc0\u1074 \uc0\u1088 \uc0\u1077 \uc0\u1084 \uc0\u1103  \uc0\u1074 \uc0\u1099 \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1085 \uc0\u1077 \uc0\u1085 \uc0\u1080 \uc0\u1103  \uc0\u1083 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1088 \uc0\u1072 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1085 \uc0\u1086 \uc0\u1081  \uc0\u1088 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1090 \uc0\u1099  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1072  \uc0\u1085 \uc0\u1077  \uc0\u1085 \uc0\u1091 \uc0\u1078 \uc0\u1076 \uc0\u1072 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1100  \uc0\u1074  \uc0\u1086 \uc0\u1090 \uc0\u1083 \uc0\u1072 \uc0\u1076 \uc0\u1082 \uc0\u1077 , \uc0\u1074 \uc0\u1089 \uc0\u1077  \uc0\u1086 \uc0\u1096 \uc0\u1080 \uc0\u1073 \uc0\u1082 \uc0\u1080  \uc0\u1082 \uc0\u1086 \uc0\u1084 \uc0\u1087 \uc0\u1080 \uc0\u1083 \uc0\u1103 \uc0\u1094 \uc0\u1080 \uc0\u1080  \uc0\u1073 \uc0\u1099 \uc0\u1083 \uc0\u1080  \uc0\u1080 \uc0\u1089 \uc0\u1087 \uc0\u1088 \uc0\u1072 \uc0\u1074 \uc0\u1083 \uc0\u1077 \uc0\u1085 \uc0\u1099  \uc0\u1089  \uc0\u1087 \uc0\u1077 \uc0\u1088 \uc0\u1074 \uc0\u1086 \uc0\u1081  \uc0\u1087 \uc0\u1086 \uc0\u1087 \uc0\u1099 \uc0\u1090 \uc0\u1082 \uc0\u1080 . \uc0\u1055 \uc0\u1086 \uc0\u1089 \uc0\u1083 \uc0\u1077  \uc0\u1080 \uc0\u1093  \uc0\u1080 \uc0\u1089 \uc0\u1087 \uc0\u1088 \uc0\u1072 \uc0\u1074 \uc0\u1083 \uc0\u1077 \uc0\u1085 \uc0\u1080 \uc0\u1103  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1072  \uc0\u1088 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1090 \uc0\u1072 \uc0\u1083 \uc0\u1072  \uc0\u1090 \uc0\u1072 \uc0\u1082 , \uc0\u1082 \uc0\u1072 \uc0\u1082  \uc0\u1073 \uc0\u1099 \uc0\u1083 \uc0\u1086  \uc0\u1079 \uc0\u1072 \uc0\u1076 \uc0\u1091 \uc0\u1084 \uc0\u1072 \uc0\u1085 \uc0\u1086  \uc0\u1080 \uc0\u1079 \uc0\u1085 \uc0\u1072 \uc0\u1095 \uc0\u1072 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1086 .}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1053 \uc0\u1077 \uc0\u1076 \uc0\u1086 \uc0\u1095 \uc0\u1077 \uc0\u1090 \uc0\u1099 }{\s28\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1042 \uc0\u1086  \uc0\u1074 \uc0\u1088 \uc0\u1077 \uc0\u1084 \uc0\u1103  \uc0\u1074 \uc0\u1099 \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1085 \uc0\u1077 \uc0\u1085 \uc0\u1080 \uc0\u1103  \uc0\u1083 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1088 \uc0\u1072 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1085 \uc0\u1086 \uc0\u1081  \uc0\u1088 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1090 \uc0\u1099  \uc0\u1085 \uc0\u1077 \uc0\u1076 \uc0\u1086 \uc0\u1095 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1074  \uc0\u1074  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1077  \uc0\u1086 \uc0\u1073 \uc0\u1085 \uc0\u1072 \uc0\u1088 \uc0\u1091 \uc0\u1078 \uc0\u1077 \uc0\u1085 \uc0\u1086  \uc0\u1085 \uc0\u1077  \uc0\u1073 \uc0\u1099 \uc0\u1083 \uc0\u1086 .}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1042 \uc0\u1099 \uc0\u1074 \uc0\u1086 \uc0\u1076 \uc0\u1099 }{\s28\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1054 \uc0\u1089 \uc0\u1085 \uc0\u1086 \uc0\u1074 \uc0\u1085 \uc0\u1072 \uc0\u1103  \uc0\u1094 \uc0\u1077 \uc0\u1083 \uc0\u1100  \uc0\u1083 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1088 \uc0\u1072 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1085 \uc0\u1086 \uc0\u1081  \uc0\u1088 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1090 \uc0\u1099  \uc0\u8470 3 - \uc0\u1079 \uc0\u1085 \uc0\u1072 \uc0\u1082 \uc0\u1086 \uc0\u1084 \uc0\u1089 \uc0\u1090 \uc0\u1074 \uc0\u1086  \uc0\u1089  \uc0\u1087 \uc0\u1072 \uc0\u1088 \uc0\u1072 \uc0\u1076 \uc0\u1080 \uc0\u1075 \uc0\u1084 \uc0\u1086 \uc0\u1081  \uc0\u1086 \uc0\u1073 \uc0\u1098 \uc0\u1077 \uc0\u1082 \uc0\u1090 \uc0\u1085 \uc0\u1086 -\uc0\u1086 \uc0\u1088 \uc0\u1080 \uc0\u1077 \uc0\u1085 \uc0\u1090 \uc0\u1080 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1085 \uc0\u1085 \uc0\u1086 \uc0\u1075 \uc0\u1086  \uc0\u1087 \uc0\u1088 \uc0\u1086 \uc0\u1075 \uc0\u1088 \uc0\u1072 \uc0\u1084 \uc0\u1084 \uc0\u1080 \uc0\u1088 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1103  (\uc0\u1054 \uc0\u1054 \uc0\u1055 ) \uc0\u1085 \uc0\u1072  \uc0\u1103 \uc0\u1079 \uc0\u1099 \uc0\u1082 \uc0\u1077  C++. \uc0\u1042  \uc0\u1093 \uc0\u1086 \uc0\u1076 \uc0\u1077  \uc0\u1074 \uc0\u1099 \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1085 \uc0\u1077 \uc0\u1085 \uc0\u1080 \uc0\u1103  \uc0\u1076 \uc0\u1072 \uc0\u1085 \uc0\u1085 \uc0\u1086 \uc0\u1081  \uc0\u1083 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1088 \uc0\u1072 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1085 \uc0\u1086 \uc0\u1081  \uc0\u1088 \uc0\u1072 \uc0\u1073 \uc0\u1086 \uc0\u1090 \uc0\u1099  \uc0\u1103  \uc0\u1087 \uc0\u1086 \uc0\u1079 \uc0\u1085 \uc0\u1072 \uc0\u1082 \uc0\u1086 \uc0\u1084 \uc0\u1080 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1100  \uc0\u1089  \uc0\u1090 \uc0\u1072 \uc0\u1082 \uc0\u1080 \uc0\u1084 \uc0\u1080  \uc0\u1092 \uc0\u1091 \uc0\u1085 \uc0\u1076 \uc0\u1072 \uc0\u1084 \uc0\u1077 \uc0\u1085 \uc0\u1090 \uc0\u1072 \uc0\u1083 \uc0\u1100 \uc0\u1085 \uc0\u1099 \uc0\u1084 \uc0\u1080  \uc0\u1087 \uc0\u1086 \uc0\u1085 \uc0\u1103 \uc0\u1090 \uc0\u1080 \uc0\u1103 \uc0\u1084 \uc0\u1080 , \uc0\u1082 \uc0\u1072 \uc0\u1082  \uc0\u1087 \uc0\u1086 \uc0\u1083 \uc0\u1080 \uc0\u1084 \uc0\u1086 \uc0\u1088 \uc0\u1092 \uc0\u1080 \uc0\u1079 \uc0\u1084 , \uc0\u1085 \uc0\u1072 \uc0\u1089 \uc0\u1083 \uc0\u1077 \uc0\u1076 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1085 \uc0\u1080 \uc0\u1077 , \uc0\u1080 \uc0\u1085 \uc0\u1082 \uc0\u1072 \uc0\u1087 \uc0\u1089 \uc0\u1091 \uc0\u1083 \uc0\u1103 \uc0\u1094 \uc0\u1080 \uc0\u1103 . \uc0\u1041 \uc0\u1099 \uc0\u1083 \uc0\u1080  \uc0\u1086 \uc0\u1089 \uc0\u1074 \uc0\u1086 \uc0\u1077 \uc0\u1085 \uc0\u1099  \uc0\u1090 \uc0\u1072 \uc0\u1082 \uc0\u1080 \uc0\u1077  \uc0\u1073 \uc0\u1072 \uc0\u1079 \uc0\u1086 \uc0\u1074 \uc0\u1099 \uc0\u1077  \uc0\u1087 \uc0\u1086 \uc0\u1085 \uc0\u1103 \uc0\u1090 \uc0\u1080 \uc0\u1103 , \uc0\u1082 \uc0\u1072 \uc0\u1082  \uc0\u1082 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1089 \uc0\u1099 , \uc0\u1084 \uc0\u1077 \uc0\u1090 \uc0\u1086 \uc0\u1076 \uc0\u1099 , \uc0\u1082 \uc0\u1086 \uc0\u1085 \uc0\u1089 \uc0\u1090 \uc0\u1088 \uc0\u1091 \uc0\u1082 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1099 , \uc0\u1076 \uc0\u1077 \uc0\u1089 \uc0\u1090 \uc0\u1088 \uc0\u1091 \uc0\u1082 \uc0\u1090 \uc0\u1086 \uc0\u1088 \uc0\u1099 . \uc0\u1054 \uc0\u1079 \uc0\u1085 \uc0\u1072 \uc0\u1082 \uc0\u1086 \uc0\u1084 \uc0\u1080 \uc0\u1083 \uc0\u1072 \uc0\u1089 \uc0\u1100  \uc0\u1089  \uc0\u1082 \uc0\u1083 \uc0\u1102 \uc0\u1095 \uc0\u1077 \uc0\u1074 \uc0\u1099 \uc0\u1084 \uc0\u1080  \uc0\u1089 \uc0\u1083 \uc0\u1086 \uc0\u1074 \uc0\u1072 \uc0\u1084 \uc0\u1080  virtual, friend, private, public.}{\s28\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u1048 \uc0\u1089 \uc0\u1093 \uc0\u1086 \uc0\u1076 \uc0\u1085 \uc0\u1099 \uc0\u1081  \uc0\u1082 \uc0\u1086 \uc0\u1076 }{\s28\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch figure.h}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef FIGURE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #define FIGURE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <ostream>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "point.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch class Figure \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch public:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     virtual void Print(std::ostream& os) = 0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     virtual double Area() = 0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     virtual ~Figure() \{\};}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif // FIGURE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch main.cpp}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "square.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "rectangle.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "trapezoid.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch int main(int argc, char** argv) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "DEFAULT FIGURES" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square sq_default;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab sq_default.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle re_default;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab re_default.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid tr_default;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab tr_default.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "SET VALUES FIGURES" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point a(2.0, 1.0);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point b(2.0, 3.0);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point c(4.0, 3.0);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point d(4.0, 1.0);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point e(5.0, 3.0);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point f(5.0, 1.0);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square sq_values(a, b, c, d);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Number of square's vertexes: " << sq_values.VertexesNumber() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Square's area: " << sq_values.Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab sq_values.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle re_values(a, b, e, f);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Number of rectangle's vertexes: " << re_values.VertexesNumber() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Rectangle's area: " << re_values.Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab re_values.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid tr_values(a, c, e, f);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Number of trapezoid's vertexes: " << tr_values.VertexesNumber() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Trapezoid's square: " << tr_values.Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab tr_values.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "CIN FIGURES" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square sq_cin(std::cin);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Number of square's vertexes: " << sq_cin.VertexesNumber() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Square's area: " << sq_cin.Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab sq_cin.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle re_cin(std::cin);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Number of rectangle's vertexes: " << re_cin.VertexesNumber() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Rectangle's area: " << re_cin.Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab re_cin.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid tr_cin(std::cin);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Number of trapezoid's vertexes: " << tr_cin.VertexesNumber() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Trapezoid's square: " << tr_cin.Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab tr_cin.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "COPIED FIGURES" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square sq_copy = sq_values;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab sq_copy.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle re_copy = re_values;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab re_copy.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid tr_copy = tr_values;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab tr_copy.Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "POINTER FIGURES" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Figure* sq_ptr = new Square(sq_cin);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab sq_ptr->Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Square's area: " << sq_ptr->Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Figure* re_ptr = new Rectangle(re_cin);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab re_ptr->Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Rectangle's area: " << re_ptr->Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Figure* tr_ptr = new Trapezoid(tr_cin);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab tr_ptr->Print(std::cout);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Trapezoid's area: " << tr_ptr->Area() << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab delete sq_ptr;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab delete re_ptr;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab delete tr_ptr;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return 0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch point.cpp}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "point.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Point::Point() : x_(0.0), y_(0.0) \{\}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Point::Point(double x, double y) : x_(x), y_(y) \{\}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Point::Point(std::istream& is) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     is >> x_ >> y_;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch double Point::dist(Point& other) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     double dx = (other.x_ - x_);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     double dy = (other.y_ - y_);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     return std::sqrt(dx * dx + dy * dy);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch std::istream& operator>>(std::istream& is, Point& p) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     is >> p.x_ >> p.y_;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     return is;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch std::ostream& operator<<(std::ostream& os, Point& p) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     os << "(" << p.x_ << ", " << p.y_ << ")";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     return os;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch point.h}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef POINT_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #define POINT_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <iostream>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <vector>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <cmath>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch class Point \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch public:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     Point();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     Point(std::istream& is);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     Point(double x, double y);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     double dist(Point& other);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     friend std::istream& operator>>(std::istream& is, Point& p);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     friend std::ostream& operator<<(std::ostream& os, Point& p);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     friend class Square;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     friend class Rectangle;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     friend class Trapezoid;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch private:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     double x_;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     double y_;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif // POINT_H#pragma once}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch rectangle.cpp}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "rectangle.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Rectangle::Rectangle() : point_a(0.0, 0.0), point_b(0.0, 0.0), point_c(0.0, 0.0), point_d(0.0, 0.0) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Default rectangle is created" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Rectangle::Rectangle(Point a, Point b, Point c, Point d) : point_a(a), point_b(b), point_c(c), point_d(d) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Rectangle is created with vertices: ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_a << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_b << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_c << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_d << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Rectangle::Rectangle(std::istream& is) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab is >> point_a >> point_b >> point_c >> point_d;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Rectangle::Rectangle(const Rectangle& other) : Rectangle(other.point_a, other.point_b, other.point_c, other.point_d) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Rectangle's copy is created" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch size_t Rectangle::VertexesNumber() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab int vert_num = 4;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return vert_num;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch double Rectangle::Area() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double side_a = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double side_b = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double fig_square = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab side_a = point_b.dist(point_a);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab side_b = point_c.dist(point_b);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab fig_square = side_a * side_b;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return fig_square;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch void Rectangle::Print(std::ostream& os) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << "Rectangle: ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_a << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_b << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_c << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_d << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Rectangle::~Rectangle() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Rectangle is deleted" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch rectangle.h}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef RECTANGLE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #define RECTANGLE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <iostream>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "figure.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch class Rectangle : public Figure \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch public:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle(Point a, Point b, Point c, Point d);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle(std::istream& is);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Rectangle(const Rectangle& other);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab size_t VertexesNumber();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double Area();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab void Print(std::ostream& os);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab virtual ~Rectangle();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch private:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_a; // lower left corner, then clockwise}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_b;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_c;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_d;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif // RECTANGLE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch square.cpp}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "square.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Square::Square() : point_a(0.0, 0.0), point_b(0.0, 0.0), point_c(0.0, 0.0), point_d(0.0, 0.0) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Default square is created" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Square::Square(Point a, Point b, Point c, Point d) : point_a(a), point_b(b), point_c(c), point_d(d) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Square is created with vertices: ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_a << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_b << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_c << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_d << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Square::Square(std::istream& is) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab is >> point_a >> point_b >> point_c >> point_d;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Square::Square(const Square& other) : Square(other.point_a, other.point_b, other.point_c, other.point_d) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Square's copy is created" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch size_t Square::VertexesNumber() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab int vert_num = 4;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return vert_num;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch double Square::Area() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double side = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double fig_square = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab side = point_b.dist(point_a);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab fig_square = side * side;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return fig_square;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch void Square::Print(std::ostream& os) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << "Square: ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_a << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_b << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_c << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_d << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Square::~Square() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Square is deleted" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch square.h}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef SQUARE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #define SQUARE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <iostream>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "figure.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch class Square : public Figure \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch public:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square(Point a, Point b, Point c, Point d);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square(std::istream& is);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Square(const Square& other);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab size_t VertexesNumber();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double Area(); // \uc0\u1087 \uc0\u1083 \uc0\u1086 \uc0\u1097 \uc0\u1072 \uc0\u1076 \uc0\u1100 }{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab void Print(std::ostream& os);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab virtual ~Square();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch private:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_a; // lower left corner, then clockwise}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_b;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_c;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_d;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif // SQUARE_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch trapezoid.cpp}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "trapezoid.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Trapezoid::Trapezoid() : point_a(0.0, 0.0), point_b(0.0, 0.0), point_c(0.0, 0.0), point_d(0.0, 0.0) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Default trapezoid is created" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Trapezoid::Trapezoid(Point a, Point b, Point c, Point d) : point_a(a), point_b(b), point_c(c), point_d(d) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Trapezoid is created with vertices: ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_a << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_b << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_c << ", ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << point_d << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Trapezoid::Trapezoid(std::istream& is) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab is >> point_a >> point_b >> point_c >> point_d;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Trapezoid::Trapezoid(const Trapezoid& other) : Trapezoid(other.point_a, other.point_b, other.point_c, other.point_d) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Trapezoid's copy is created" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch size_t Trapezoid::VertexesNumber() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab int vert_num = 4;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return vert_num;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch double Trapezoid::Area() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double fig_square = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double side_a = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double side_b = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double height = 0.0;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab if (point_a.y_ == point_d.y_ && point_b.y_ == point_c.y_) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab side_a = point_d.dist(point_a);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab side_b = point_c.dist(point_b);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab height = point_b.y_ - point_a.y_;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab else \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab side_a = point_b.dist(point_a);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab side_b = point_c.dist(point_d);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab height = point_c.x_ - point_b.x_;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab fig_square = 0.5 * (side_a + side_b) * height;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab return fig_square;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch void Trapezoid::Print(std::ostream& os) \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << "Trapezoid: ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_a << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_b << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_c << " ";}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab os << point_d << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Trapezoid::~Trapezoid() \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab std::cout << "Trapezoid is deleted" << std::endl;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch trapezoid.h}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef TRAPEZOID_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #define TRAPEZOID_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include <iostream>}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "figure.h"}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch class Trapezoid : public Figure \{}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch public:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid(Point a, Point b, Point c, Point d);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid(std::istream& is);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Trapezoid(const Trapezoid& other);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab size_t VertexesNumber();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab double Area(); // \uc0\u1087 \uc0\u1083 \uc0\u1086 \uc0\u1097 \uc0\u1072 \uc0\u1076 \uc0\u1100 }{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab void Print(std::ostream& os);}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab virtual ~Trapezoid();}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch private:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_a; // lower left corner, then clockwise}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_b;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_c;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Point point_d;}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif // TRAPEZOID_H}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}}